
[JIRA Service Desk - modular action logs]
description = This report exposes all logs from the JIRA Service Desk modular action
dispatch.earliest_time = -60m
dispatch.latest_time = now
display.visualizations.show = 0
request.ui_dispatch_app = TA-jira-service-desk-simple-addon
request.ui_dispatch_view = search
search = (index="_internal" OR index="cim_modactions") (source="*jira_service_desk_modalert.log")

[JIRA Service Desk - modular resilient store action logs]
description = This report exposes all logs from the JIRA Service Desk modular action
dispatch.earliest_time = -60m
dispatch.latest_time = now
display.visualizations.show = 0
request.ui_dispatch_app = TA-jira-service-desk-simple-addon
request.ui_dispatch_view = search
search = (index="_internal" OR index="cim_modactions") (source="*jira_service_desk_replay_modalert.log")

[JIRA Service Desk - Issue creation successes]
description = This report exposes all logs from the JIRA Service Desk modular action
dispatch.earliest_time = -60m
dispatch.latest_time = now
display.visualizations.show = 0
request.ui_dispatch_app = TA-jira-service-desk-simple-addon
request.ui_dispatch_view = search
search = (index="_internal" OR index="cim_modactions") (source="*jira_service_desk_modalert.log") "JIRA Service Desk ticket successfully created"

[JIRA Service Desk - temporary issue creation failures]
description = This report exposes all logs from the JIRA Service Desk modular action
dispatch.earliest_time = -60m
dispatch.latest_time = now
display.visualizations.show = 0
request.ui_dispatch_app = TA-jira-service-desk-simple-addon
request.ui_dispatch_view = search
search = (index="_internal" OR index="cim_modactions") (source="*jira_service_desk_modalert.log") "JIRA Service Desk ticket creation has failed"

[JIRA Service Desk - permanent issue creation failures]
description = This report exposes all logs from the JIRA Service Desk modular action
dispatch.earliest_time = -60m
dispatch.latest_time = now
display.visualizations.show = 0
request.ui_dispatch_app = TA-jira-service-desk-simple-addon
request.ui_dispatch_view = search
search = (index="_internal" OR index="cim_modactions") (source="*jira_service_desk_replay_modalert.log") "permanent failure!"

[JIRA Service Desk - Check connection]
description = This report checks the JIRA connectivity (settings, network and authentication) for all configured accounts
dispatch.earliest_time = -5m
dispatch.latest_time = now
display.visualizations.show = 0
request.ui_dispatch_app = TA-jira-service-desk-simple-addon
request.ui_dispatch_view = search
search = | jirafill account=_all opt=0

[JIRA Service Desk - Get projects]
description = This report exposes JIRA projects available
dispatch.earliest_time = -5m
dispatch.latest_time = now
display.visualizations.show = 0
request.ui_dispatch_app = TA-jira-service-desk-simple-addon
request.ui_dispatch_view = search
search = | jirafill account=_all opt=1 | stats values(key) as key, values(key_projects) as key_projects by account

[JIRA Service Desk - Get issue types]
description = This report exposes JIRA issue types available
dispatch.earliest_time = -5m
dispatch.latest_time = now
display.visualizations.show = 0
request.ui_dispatch_app = TA-jira-service-desk-simple-addon
request.ui_dispatch_view = search
search = | jirafill account=_all opt=2 | stats values(issues) as issues by account

[JIRA Service Desk - Get issue priorities]
description = This report exposes JIRA priorities available
dispatch.earliest_time = -5m
dispatch.latest_time = now
display.visualizations.show = 0
request.ui_dispatch_app = TA-jira-service-desk-simple-addon
request.ui_dispatch_view = search
search = | jirafill account=_all opt=3 | stats values(priorities) as priorities by account

[JIRA Service Desk - Get status categories]
description = This report exposes JIRA statuses available
dispatch.earliest_time = -5m
dispatch.latest_time = now
display.visualizations.show = 0
request.ui_dispatch_app = TA-jira-service-desk-simple-addon
request.ui_dispatch_view = search
search = | jirafill account=_all opt=4 | stats values(statusCategory) as statusCategory by account

[JIRA Service Desk - Get fields description per project]
description = This report exposes JIRA fields per project
dispatch.earliest_time = -5m
dispatch.latest_time = now
display.visualizations.show = 0
request.ui_dispatch_app = TA-jira-service-desk-simple-addon
request.ui_dispatch_view = search
search = | jirarest account=_any target="rest/api/2/project" | spath | rename "{}.key" as key | table key | mvexpand key | append [ | makeresults | eval key="noop" | fields - _time ] | streamstats count as project_no\
| map [ | jirarest account=_any target="rest/api/2/issue/createmeta?projectKeys=$key$&expand=projects.issuetypes.fields" ] | streamstats count as result_no\
| append [ | jirarest account=_any target="rest/api/2/project" | spath | rename "{}.key" as key | table key | mvexpand key | append [ | makeresults | eval key="noop" | fields - _time ] | streamstats count as project_no ]\
| eval line_merge=case(isnum(project_no), project_no, isnum(result_no), result_no)\
| stats first(key) as project, first(_raw) as "_raw" by line_merge | fields - line_merge | eval _time=now()\
| spath | where project!="noop"

[JIRA Service Desk - Get fields description for all projects]
description = This report exposes JIRA fields for all projects
dispatch.earliest_time = -5m
dispatch.latest_time = now
display.visualizations.show = 0
request.ui_dispatch_app = TA-jira-service-desk-simple-addon
request.ui_dispatch_view = search
search = | jirarest account=_any target="rest/api/2/issue/createmeta?expand=projects.issuetypes.fields" | spath

[JIRA Service Desk - Replay collection]
description = This report exposes the JIRA Replay KVstore collection.\
Tickets present in this collection are previously failed issue creation attempts, which are automatically re-attempted based on the replay policy.
dispatch.earliest_time = -5m
dispatch.latest_time = now
display.visualizations.show = 0
request.ui_dispatch_app = TA-jira-service-desk-simple-addon
request.ui_dispatch_view = search
search = | inputlookup jira_failures_replay | eval uuid=_key

[JIRA Service Desk - Issues backlog collection]
description = This report exposes the JIRA issues backlog which contains records for every JIRA issue created by the add-on, this collection is\
as well used by the JIRA add-on backend for the deduplication behaviour. A status created means an issue that was created, while status status updated\
reveals an update was performed via the JIRA deduplication feature.
dispatch.earliest_time = -5m
dispatch.latest_time = now
display.visualizations.show = 0
request.ui_dispatch_app = TA-jira-service-desk-simple-addon
request.ui_dispatch_view = search
search = | inputlookup jira_issues_backlog | eval key=_key\
| eval ctime=strftime(round(ctime, 0), "%c"), mtime=strftime(round(mtime, 0), "%c")\
| fields key, ctime, mtime, *\
| sort 0 - mtime

[JIRA Service Desk - detection of temporary issue creation failure]
alert.severity = 4
alert.suppress = 1
alert.suppress.fields = time
alert.suppress.period = 1h
alert.track = 1
alert.digest_mode = 0
counttype = number of events
cron_schedule = */5 * * * *
description = This alert will detect the first failure of an issue creation, once a ticket creation has failed, it is stored in the replay KVstore.
disabled = 0
dispatch.earliest_time = -15m
dispatch.latest_time = -30s
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = TA-jira-service-desk-simple-addon
request.ui_dispatch_view = search
search = (index="_internal" OR index="cim_modactions") (source="*jira_service_desk_modalert.log")\
| rex "\"key\":\"(?<jira_issue>[^\"]*)\","\
| transaction pid maxpause=5m\
| eval jira_transaction_status=if(isnull(jira_issue), "failure", "success")\
| where jira_transaction_status="failure" AND match(_raw, "JIRA Service Desk ticket creation has failed")\
| stats first(app) as app, first(action_mode) as action_mode, values(sid) as sid, first(search_name) as search_name, first(user) as user by _time\
| eval time=strftime(_time, "%c")

[JIRA Service Desk - detection of permanent issue creation failure]
alert.severity = 4
alert.suppress = 1
alert.suppress.fields = time
alert.suppress.period = 1h
alert.track = 1
alert.digest_mode = 0
counttype = number of events
cron_schedule = */5 * * * *
description = This alert will detect a definitive and permanent failure of an issue creation.\
once a ticket has reached the final state of the resilient policy, it is temporary stored upon definitive deletion but creation will not be attempted anymore.
disabled = 0
dispatch.earliest_time = -15m
dispatch.latest_time = -30s
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = TA-jira-service-desk-simple-addon
request.ui_dispatch_view = search
search = (index="_internal" OR index="cim_modactions") (source="*jira_service_desk_replay_modalert.log") "permanent failure!"\
| stats first(app) as app, first(action_mode) as action_mode, values(sid) as sid, first(search_name) as search_name, first(user) as user by _time\
| eval time=strftime(_time, "%c")

[JIRA Service Desk - Resilient store Tracker]
action.jira_service_desk_replay = 1
action.jira_service_desk_replay.param.account = $result.account$
action.jira_service_desk_replay.param.ticket_ctime = $result.ctime$
action.jira_service_desk_replay.param.ticket_data = $result.data$
action.jira_service_desk_replay.param.ticket_max_attempts = $result.max_attempts$
action.jira_service_desk_replay.param.ticket_mtime = $result.mtime$
action.jira_service_desk_replay.param.ticket_no_attempts = $result.no_attempts$
action.jira_service_desk_replay.param.ticket_status = $result.status$
action.jira_service_desk_replay.param.ticket_uuid = $result.uuid$
alert.digest_mode = 0
alert.suppress = 0
alert.track = 0
counttype = number of events
description = This alert tracks failed tickets stored in the resilient KVstore and manage ticket creation re-attempts
cron_schedule = */5 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = TA-jira-service-desk-simple-addon
request.ui_dispatch_view = search
search = | getjirakv | where isnotnull(uuid)\
| table account, uuid, data, no_attempts, status, ctime, mtime\
`comment("#### KVstore containing jira tickets failure is loaded")`\
\
`comment("#### mtime contains the last modification epoch time of the ticket, it will be null if this is the first time we handle this failure")`\
| fillnull value="n/a" mtime\
\
`comment("#### defines the maximal numbers of attempts, the bellow expects the job to run every 5 minutes, and allows attempting the ticket creation during 72 hours")`\
`comment("#### once the 72 hour period is reached, the ticket is finally purged from the KVstore")`\
| eval max_attempts=(60/5)*24*3\
| eval duration=mtime-ctime\
| eval expiration=mtime+(86400*7)\
| eval status=if(mtime!="n/a" AND now()>expiration, "tagged_for_removal", status)\
\
`comment("#### convert duration to human readable")`\
| eval duration=if(mtime!="n/a", tostring(mtime-ctime, "duration"), "n/a")

[JIRA Service Desk - Issues statistics report per project]
description = This report exposes JIRA issues statistics per project, you can use this report with the collect or mcollect command for indexing purposes
dispatch.earliest_time = -5m
dispatch.latest_time = now
display.visualizations.show = 0
request.ui_dispatch_app = TA-jira-service-desk-simple-addon
request.ui_dispatch_view = search
search = | jirarest account=_any target="rest/api/2/project" | spath | rename "{}.key" as key | table key | mvexpand key | append [ | makeresults | eval key="noop" | fields - _time ] | streamstats count as project_no\
\
| map [ | jirarest account=_any target="rest/api/2/search?jql=project=$key$&maxResults=0" ] | streamstats count as result_no | rex field=_raw "\"total\":\s(?<total_issues>\d*)"\
| append [\
| jirarest account=_any target="rest/api/2/project" | spath | rename "{}.key" as key | table key | mvexpand key | append [ | makeresults | eval key="noop" | fields - _time ] | streamstats count as project_no\
| map [ | jirarest account=_any target="rest/api/2/search?jql=project=$key$%20AND%20statuscategory%20IN%20%28%22Done%22%29&maxResults=0" ] | streamstats count as result_no | rex field=_raw "\"total\":\s(?<total_done>\d*)"\
]\
| append [\
| jirarest account=_any target="rest/api/2/project" | spath | rename "{}.key" as key | table key | mvexpand key | append [ | makeresults | eval key="noop" | fields - _time ] | streamstats count as project_no\
| map [ | jirarest account=_any target="rest/api/2/search?jql=project=$key$%20AND%20statuscategory%20IN%20%28%22To%20Do%22%29&maxResults=0" ] | streamstats count as result_no | rex field=_raw "\"total\":\s(?<total_to_do>\d*)"\
]\
| append [\
| jirarest account=_any target="rest/api/2/project" | spath | rename "{}.key" as key | table key | mvexpand key | append [ | makeresults | eval key="noop" | fields - _time ] | streamstats count as project_no\
| map [ | jirarest account=_any target="rest/api/2/search?jql=project=$key$%20AND%20statuscategory%20IN%20%28%22In%20Progress%22%29&maxResults=0" ] | streamstats count as result_no | rex field=_raw "\"total\":\s(?<total_in_progress>\d*)"\
]\
| append [ | jirarest account=_any target="rest/api/2/project" | spath | rename "{}.key" as key | table key | mvexpand key | append [ | makeresults | eval key="noop" | fields - _time ] | streamstats count as project_no ]\
| eval line_merge=case(isnum(project_no), project_no, isnum(result_no), result_no)\
| stats first(key) as project, first(total_*) as "total_*" by line_merge | fields - line_merge\
\
| eval pct_total_done=round(total_done/total_issues*100, 2), pct_total_to_do=round(total_to_do/total_issues*100, 2), pct_total_in_progress=round(total_in_progress/total_issues*100, 2)\
| foreach pct_* [ eval <<FIELD>> = if(isnull('<<FIELD>>'), "0.00", '<<FIELD>>' ) ]\
\
| where project!="noop"\
\
| eval _time=now() | fields _time, project, pct_*, total_*
