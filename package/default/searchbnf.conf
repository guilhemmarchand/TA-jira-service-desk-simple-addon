# searchbnf.conf

[jirafill-command]
syntax = | jirafill target=<API endpoint>
description = \
    This command is a REST API wrapper for JIRA used to populate dropdowns for the alert action creation.
    Syntax: \
    | jirafill account=<name of the account> opt=<1 to get projects, 2 to get issue types, 3 to get priorities>
comment1 = \
    This example retrieves the list of projects available in JIRA
example1 = \
    | jirafill account=LAB opt=1
shortdesc = REST API wrapper for JIRA, used to \
    populate dropdowns for the alert action creation.
usage = public
tags = jirafill

[jirarest-command]
syntax = | jirarest account=<name of the account> target=<API endpoint> method=<HTTP method> json_request=<JSON data>
description = \
    This command is a REST API wrapper for JIRA API endpoints, it allows performing \
    get HTTP calls against an endpoint and returns a JSON format answer. \
    method defaults to GET if not specified, json_request is required for POST and PUT.\
    Syntax: \
    | jirarest account=<name of the account> target=<API endpoint> method=<HTTP method> json_request=<JSON data>
comment1 = \
    This example retrieves information from JIRA using a REST endpoint
example1 = \
    | jirarest account=LAB target="rest/api/2/myself" method="GET"
shortdesc = REST API wrapper for JIRA, allows performing \
    get HTTP calls against an endpoint.
usage = public
tags = jirarest

[getjirakv-command]
syntax = | getjirakv verify=<boolean>
description = \
    This command is used to load the JIRA replay KVstore content. \
    Its purpose is to handle distributed setup of the JIRA Add-on and \
    publication failures automatic re-attempts.\
    Syntax: \
    | getjirakv
comment1 = \
    This example retrieves the content of the replay KVstore from a local or remote storage
example1 = \
    | getjirakv verify=False
shortdesc = Load the JIRA replay KVstore content
usage = public
tags = getjirakv
